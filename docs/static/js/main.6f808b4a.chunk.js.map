{"version":3,"sources":["parts/ProgramType.ts","parts/BoardProvider.tsx","parts/Arc.tsx","parts/stringToEnum.ts","parts/Direction.ts","parts/ChipType.ts","parts/Chips.tsx","parts/Chip.tsx","parts/ChipSocket.tsx","parts/Board.tsx","parts/ProgramSelector.tsx","parts/ChipEditor.tsx","parts/LogProvider.tsx","parts/Log.tsx","index.tsx","BoardEditor.tsx"],"names":["ProgramType","defaultValue","main","missile","length","targetProgram","MAIN","targetPosition","editingChip","createEmpty","program","i","line","j","push","actions","_class","Object","classCallCheck","this","createClass","key","value","state","y","x","objectSpread","chip","type","next","newState","applyEdtingChip","dropPosition","startEditingInternal","createTinyContext","Provider","useBoardContext","useContext","BoardProvider","_ref","children","react_default","a","createElement","Arc","_ref$x","_ref$y","direction","angle","_ref$renge","renge","argRenge","_ref$fillColor","fillColor","_ref$centerColor","centerColor","color","react","transform","concat","r","cy","cx","fill","normalizedAngle","Math","max","halfAngleRadian","PI","angleX","cos","angleY","sin","d","x1","y1","x2","y2","strokeWidth","stroke","stringToEnum","o","reduce","c","create","Direction","DirectionValues","MainChipType","MainChipTypeValues","LimitableInput","min","step","onChange","normalize","undefined","e","Number","target","SimpleActionChip","_ref2","label","description","style","textAlign","Fragment","VariableActionChip","_ref3","VariableActionChipEditor","_ref4","_ref4$min","_ref4$max","_ref4$step","onChipUpdate","UpdateBranchButtons","_ref5","map","v","onClick","branch","CheckChip","_ref6","greaterOrLess","CheckChipEditor","_ref7","_ref7$min","_ref7$max","_ref7$step","Chips_UpdateBranchButtons","id","name","checked","htmlFor","Chips_LimitableInput","ScanChip","_ref8","_ref8$chip","_ref8$chip$direction","_ref8$chip$angle","_ref8$chip$range","range","display","alignItems","justifyContent","flexWrap","marginLeft","width","height","viewBox","size","ScanChipEditor","_ref9","FireLaserChip","_ref10","_ref10$chip","_ref10$chip$force","force","FireLaserChipEditor","_ref11","FireMissileChip","LogChip","_ref12","message","substring","LogChipEditor","_ref13","ScanDebugChip","_ref14","_ref14$chip","_ref14$chip$direction","_ref14$chip$angle","_ref14$chip$range","ScanDebugChipEditor","_ref15","factories","Map","selectChipUi","factory","get","Error","set","nop","init","prev","down","Chip","_ref16","objectDestructuringEmpty","Chips_SimpleActionChip","Editor","ahead","_ref17","back","_ref18","ascent","_ref19","descent","_ref20","turn","_ref21","wait","_ref22","Chips_VariableActionChip","_ref23","Chips_VariableActionChipEditor","frame","right","_ref24","Chips_CheckChip","_ref25","Chips_CheckChipEditor","fuel","_ref26","_ref27","altitude","_ref28","_ref29","shield","_ref30","_ref31","temperature","_ref32","_ref33","missileAmmo","_ref34","_ref35","random","_ref36","_ref37","scanEnemy","_ref38","Chips_ScanChip","_ref39","Chips_ScanChipEditor","scanAttack","_ref40","_ref41","fireLaser","_ref42","Chips_FireLaserChip","_ref43","Chips_FireLaserChipEditor","fireMissile","_ref44","Chips_FireMissileChip","log","_ref45","Chips_LogChip","_ref46","Chips_LogChipEditor","scanDebug","_ref47","Chips_ScanDebugChip","_ref48","Chips_ScanDebugChipEditor","m","Arrow","_ref$color","fontWeight","position","_useBoardContext","_useBoardContext$stat","_useBoardContext$acti","startEditing","actionDrag","drag","_useDrag","useDrag","item","begin","collect","monitor","isDragging","_useDrag2","slicedToArray","isTarget","chipUi","ref","opacity","backgroundColor","ChipSocket","actionDrop","drop","border","_useDrop","useDrop","accept","isOver","_useDrop2","Chip_Chip","pointerEvents","top","left","bottom","EDITOR_SIZE","Board","overrideProgram","chips","JSON","stringify","parse","ProgramSelector","setTargetProgram","MISSILE","ChipEditor","context","_context$actions","updateEditingChip","finishEditing","cancel","del","delete","f","console","_len","arguments","messages","Array","_key","reverse","useLogContext","LogProvider","LogProvider_Provider","Log","_useLogContext","l","useMemo","debug","join","rootElement","document","getElementById","ReactDOM","render","LogProvider_LogProvider","BoardProvider_BoardProvider","DndProvider","backend","Backend"],"mappings":"wIAAYA,6ICuCZ,IAAMC,EAA2B,CAC/BC,KAAM,GACNC,QAAS,GACTC,OAAQ,EACRC,cAAeL,EAAYM,KAC3BC,eAAgB,KAChBC,YAAa,MAGTC,EAAc,SAACL,GAEnB,IADA,IAAMM,EAAmB,GAChBC,EAAI,EAAGA,EAAIP,EAAQO,IAAK,CAE/B,IADA,IAAMC,EAAO,GACJC,EAAI,EAAGA,EAAIT,EAAQS,IAC1BD,EAAKE,KAAK,MAEZJ,EAAQI,KAAKF,GAEf,OAAOF,GAGHK,EAAU,wBAAAC,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAA,OAAAC,OAAAG,EAAA,EAAAH,CAAAD,EAAA,EAAAK,IAAA,kBAAAC,MAAA,SACUC,GAAmB,IACjCrB,EAA8DqB,EAA9DrB,KAAMC,EAAwDoB,EAAxDpB,QAASI,EAA+CgB,EAA/ChB,eAAgBF,EAA+BkB,EAA/BlB,cAAeG,EAAgBe,EAAhBf,YACtD,OAAuB,OAAnBD,GAA2C,OAAhBC,EACtBe,IAEOlB,IAAkBL,EAAYM,KAAOJ,EAAOC,GACpDI,EAAeiB,GAAGjB,EAAekB,GAAKjB,EACvCS,OAAAS,EAAA,EAAAT,CAAA,GAAKM,EAAZ,CAAmBf,YAAa,KAAMD,eAAgB,UAR1C,CAAAc,IAAA,uBAAAC,MAAA,SAUeC,EAAmBhB,GAAoB,IAC1DL,EAAiCqB,EAAjCrB,KAAMC,EAA2BoB,EAA3BpB,QAERwB,GAFmCJ,EAAlBlB,gBACWL,EAAYM,KAAOJ,EAAOC,GACvCI,EAAeiB,GAAGjB,EAAekB,GAChDjB,EAAoBmB,EAAIV,OAAAS,EAAA,EAAAT,CAAA,GAAQU,GAAS,CAAEC,KAAM,MAAOC,KAAM,QAEpE,OAAOZ,OAAAS,EAAA,EAAAT,CAAA,GAAKM,EAAZ,CAAmBhB,iBAAgBC,kBAhBvB,CAAAa,IAAA,mBAAAC,MAAA,SAkBGC,EAAmBlB,GAClC,IAAMyB,EAAWX,KAAKY,gBAAgBR,GACtC,OAAON,OAAAS,EAAA,EAAAT,CAAA,GAAKa,EAAZ,CAAsBzB,oBApBV,CAAAgB,IAAA,OAAAC,MAAA,SAsBTC,EAAmBhB,GACtB,IAAMuB,EAAWX,KAAKY,gBAAgBR,GAEtC,OAAON,OAAAS,EAAA,EAAAT,CAAA,GAAKa,EAAZ,CAAsBtB,YAAa,KAAMD,qBAzB7B,CAAAc,IAAA,OAAAC,MAAA,SA2BTC,EAAmBS,GAAkB,IAChC9B,EAAiDqB,EAAjDrB,KAAMC,EAA2CoB,EAA3CpB,QAASI,EAAkCgB,EAAlChB,eAAgBF,EAAkBkB,EAAlBlB,cACvC,GAAuB,OAAnBE,EAAJ,CAIA,IAAMG,EAAUL,IAAkBL,EAAYM,KAAOJ,EAAOC,EACtDwB,EAAOjB,EAAQH,EAAeiB,GAAGjB,EAAekB,GACtD,GAAIf,EAAQsB,EAAaR,GAAGQ,EAAaP,GAAI,CAC3C,IAAIK,EAAoBb,OAAAS,EAAA,EAAAT,CAAA,GAAQM,EAAR,CAAehB,eAAgB,OAGvD,OAFAuB,EAAWX,KAAKc,qBAAqBH,EAAUvB,GAExCU,OAAAS,EAAA,EAAAT,CAAA,GAAKa,GAMd,OAJApB,EAAQH,EAAeiB,GAAGjB,EAAekB,GAAK,KAC9Cf,EAAQsB,EAAaR,GAAGQ,EAAaP,GAAKE,EACzBR,KAAKc,qBAAqBV,EAAOS,MA3CtC,CAAAX,IAAA,eAAAC,MAAA,SA+CDC,EAAmBhB,GAC9B,IAAIuB,EAAWX,KAAKY,gBAAgBR,GAGpC,OAFAO,EAAWX,KAAKc,qBAAqBH,EAAUvB,KAjDnC,CAAAc,IAAA,oBAAAC,MAAA,SAqDIC,EAAmBI,GAEnC,OAAOV,OAAAS,EAAA,EAAAT,CAAA,GAAKM,EAAZ,CAAmBf,YAAYS,OAAAS,EAAA,EAAAT,CAAA,GAAMU,OAvDzB,CAAAN,IAAA,gBAAAC,MAAA,SAyDAC,GAGZ,OAFiBJ,KAAKY,gBAAgBR,KA1D1B,CAAAF,IAAA,SAAAC,MAAA,SA8DPC,GAEL,OAAON,OAAAS,EAAA,EAAAT,CAAA,GAAKM,EAAZ,CAAmBf,YAAa,KAAMD,eAAgB,SAhE1C,CAAAc,IAAA,SAAAC,MAAA,SAkEPC,GAAmB,IAChBrB,EAAiDqB,EAAjDrB,KAAMC,EAA2CoB,EAA3CpB,QAASI,EAAkCgB,EAAlChB,eAAgBF,EAAkBkB,EAAlBlB,cACvC,GAAuB,OAAnBE,EAMJ,OAHgBF,IAAkBL,EAAYM,KAAOJ,EAAOC,GACpDI,EAAeiB,GAAGjB,EAAekB,GAAK,KAEvCR,OAAAS,EAAA,EAAAT,CAAA,GAAKM,EAAZ,CAAmBf,YAAa,KAAMD,eAAgB,SA1E1C,CAAAc,IAAA,kBAAAC,MAAA,SA4EEC,EAAmBb,GAOjC,OAN0Ba,EAAlBlB,gBACcL,EAAYM,KAChCiB,EAAMrB,KAAOQ,EAEba,EAAMpB,QAAUO,EAEXa,MAnFKP,EAAA,MAuFiBkB,YAA2CnB,GAApEoB,aAEKC,IAFKC,WAGLC,EAAgB,SAAAC,GAAmE,IAAhEnC,EAAgEmC,EAAhEnC,OAAQoC,EAAwDD,EAAxDC,SACtC,OACEC,EAAAC,EAAAC,cAACR,EAAD,CACEb,MAAKL,OAAAS,EAAA,EAAAT,CAAA,GACAhB,EADA,CAEHG,SACAF,KAAMO,EAAYL,GAClBD,QAASM,EAAYL,MAGtBoC,kCCpJQ,SAASI,EAATL,GAQF,IAAAM,EAAAN,EAPXd,SAOW,IAAAoB,EAPP,EAOOA,EAAAC,EAAAP,EANXf,SAMW,IAAAsB,EANP,EAMOA,EALXC,EAKWR,EALXQ,UACAC,EAIWT,EAJXS,MAIWC,EAAAV,EAHXW,MAAOC,OAGI,IAAAF,EAHO,EAGPA,EAAAG,EAAAb,EAFXc,iBAEW,IAAAD,EAFC,QAEDA,EAAAE,EAAAf,EADXgB,mBACW,IAAAD,EADG,OACHA,EAELJ,EADUC,GAAY,EACJ,IAAMA,EAExBK,EAAQH,EAEd,GAAI,KAAOL,EACT,OACES,EAAA,mBAAGC,UAAS,aAAAC,OAAelC,EAAf,KAAAkC,OAAoBnC,EAApB,MACViC,EAAA,wBAAQG,EAAGV,EAAOW,GAAI,EAAGC,GAAI,EAAGC,KAAMP,KAK5C,IAAMQ,EAAkBC,KAAKC,IAAI,EAAGlB,GAC9BmB,EAAmBH,EAAkBC,KAAKG,GAAM,IAAM,EACtDC,EAASnB,EAAQe,KAAKK,IAAIH,GAC1BI,EAASrB,EAAQe,KAAKO,IAAIL,GAC1BM,EAAC,sBAAAd,OAEDU,EAFC,KAAAV,OAESY,EAFT,YAAAZ,OAGDT,EAHC,KAAAS,OAGQT,EAHR,KAAAS,OAGiBK,EAAkB,EAHnC,KAAAL,OAGwCK,EAAkB,IAAM,EAAI,EAHpE,OAAAL,OAG2EU,EAH3E,KAAAV,QAGsFY,EAHtF,eAOP,OACEd,EAAA,mBAAGC,UAAS,aAAAC,OAAelC,EAAf,KAAAkC,OAAoBnC,EAApB,aAAAmC,OAAiCZ,EAAjC,YACVU,EAAA,sBAAMgB,EAAGA,EAAGV,KAAMP,IAClBC,EAAA,sBAAMiB,GAAI,EAAGC,GAAI,EAAGC,GAAI1B,EAAO2B,GAAI,EAAGC,YAAY,IAAIC,OAAQxB,KChD7D,SAASyB,EAA+BC,GAC7C,MAAO,CACLA,EAAEC,OAAO,SAACxC,EAAGyC,GAEX,OADAzC,EAAEyC,GAAKA,EACAzC,GACNzB,OAAOmE,OAAO,OACjBH,SCJwCD,EAAa,CACvD,KACA,OACA,OACA,QACA,SACA,UACA,WACA,iCARYK,OAAWC,SCAyBN,EAAa,CAC7D,MACA,SACA,QACA,WACA,OACA,SACA,cACA,cACA,YACA,aACA,QACA,OACA,SACA,UACA,OACA,YACA,cACA,OACA,MACA,iCApBYO,OAAcC,SAwB4BR,EAAa,CACnE,MACA,SACA,QACA,WACA,OACA,YACA,YACA,UACA,YACA,YACA,WACA,4BCEIS,aAAiB,SAAAlD,GAYjB,IAXJjB,EAWIiB,EAXJjB,MACAoE,EAUInD,EAVJmD,IACAxB,EASI3B,EATJ2B,IACAyB,EAQIpD,EARJoD,KACAC,EAOIrD,EAPJqD,SAQMC,EAAY,SAACvE,GACjB,YAAYwE,IAARJ,GAAqBpE,EAAQoE,EACxBA,OAEGI,IAAR5B,GAAqBA,EAAM5C,EACtB4C,EAEF5C,GAGT,OADAA,EAAQuE,EAAUvE,GAEhBmB,EAAAC,EAAAC,cAAA,SACEf,KAAK,SACLN,MAAOA,EACPoE,IAAKA,EACLxB,IAAKA,EACLyB,KAAMA,EACNC,SAAU,SAAAG,GACRH,EAASC,EAAUG,OAAOD,EAAEE,OAAO3E,cAMrC4E,EAAmB,SAAAC,GAAqE,IAAlEC,EAAkED,EAAlEC,MAAOC,EAA2DF,EAA3DE,YACjC,OACE5D,EAAAC,EAAAC,cAAA,QAAM2D,MAAO,CAAEC,UAAW,WACvBH,EACAC,EACC5D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8D,SAAA,KACE/D,EAAAC,EAAAC,cAAA,WACC0D,GAED,OAMJI,EAAqB,SAAAC,GAAkE,IAA/D/E,EAA+D+E,EAA/D/E,KAAMyE,EAAyDM,EAAzDN,MAClC,OACE3D,EAAAC,EAAAC,cAAA,QAAM2D,MAAO,CAAEC,UAAW,WACvBH,EACD3D,EAAAC,EAAAC,cAAA,WACChB,EAAKL,OAAS,IAKfqF,EAA2B,SAAAC,GAY3B,IAXJjF,EAWIiF,EAXJjF,KAWIkF,EAAAD,EAVJlB,WAUI,IAAAmB,EAVE,EAUFA,EAAAC,EAAAF,EATJ1C,WASI,IAAA4C,EATE,IASFA,EAAAC,EAAAH,EARJjB,YAQI,IAAAoB,EARG,EAQHA,EAPJC,EAOIJ,EAPJI,aAQA,OACEvE,EAAAC,EAAAC,cAAA,0BAEEF,EAAAC,EAAAC,cAAA,SACEf,KAAK,SACLN,MAAOK,EAAKL,MACZoE,IAAKA,EACLxB,IAAKA,EACLyB,KAAMA,EACNC,SAAU,SAAAG,GACRiB,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYL,MAAOyE,EAAEE,OAAO3E,cAO5C2F,EAAsB,SAAAC,GAAyF,IAAtFvF,EAAsFuF,EAAtFvF,KAAMqF,EAAgFE,EAAhFF,aAEnC,OACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8D,SAAA,KACGlB,EAAgB6B,IAAI,SAAAC,GAAC,OACpB3E,EAAAC,EAAAC,cAAA,UAAQtB,IAAK+F,EAAGC,SAJCC,EAIsBF,EAJA,kBAAMJ,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAY2F,eAKlEF,GALa,IAACE,MAanBC,EAAY,SAAAC,GAAyD,IAAtD7F,EAAsD6F,EAAtD7F,KAAMyE,EAAgDoB,EAAhDpB,MACzB,OACE3D,EAAAC,EAAAC,cAAA,QAAM2D,MAAO,CAAEC,UAAW,UACA,YAAvB5E,EAAK8F,cACJhF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8D,SAAA,KACGJ,EADH,SAEE3D,EAAAC,EAAAC,cAAA,WACChB,EAAKL,OAAS,GAGjBmB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8D,SAAA,KACGJ,EADH,SAEE3D,EAAAC,EAAAC,cAAA,WACChB,EAAKL,OAAS,KAMnBoG,EAAkB,SAAAC,GAYlB,IAXJhG,EAWIgG,EAXJhG,KAWIiG,EAAAD,EAVJjC,WAUI,IAAAkC,EAVE,EAUFA,EAAAC,EAAAF,EATJzD,WASI,IAAA2D,EATE,IASFA,EAAAC,EAAAH,EARJhC,YAQI,IAAAmC,EARG,EAQHA,EAPJd,EAOIW,EAPJX,aAQA,OACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8D,SAAA,KACE/D,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACoF,EAAD,CAAqBpG,KAAMA,EAAMqF,aAAcA,KAEjDvE,EAAAC,EAAAC,cAAA,4CAEEF,EAAAC,EAAAC,cAAA,SACEf,KAAK,QACLoG,GAAG,UACHC,KAAK,gBACL3G,MAAM,UACN4G,QAAgC,YAAvBvG,EAAK8F,cACd7B,SAAU,SAAAG,GACRiB,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAY8F,cAAe1B,EAAEE,OAAO3E,YAGpDmB,EAAAC,EAAAC,cAAA,SAAOwF,QAAQ,WAAf,WACA1F,EAAAC,EAAAC,cAAA,SACEf,KAAK,QACLoG,GAAG,OACHC,KAAK,gBACL3G,MAAM,OACN4G,QAAgC,SAAvBvG,EAAK8F,cACd7B,SAAU,SAAAG,GACRiB,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAY8F,cAAe1B,EAAEE,OAAO3E,YAGpDmB,EAAAC,EAAAC,cAAA,SAAOwF,QAAQ,QAAf,SAEF1F,EAAAC,EAAAC,cAAA,wBAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKL,MACZoE,IAAKA,EACLxB,IAAKA,EACLyB,KAAMA,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYL,iBAO/C+G,EAAW,SAAAC,GAAkG,IAAAC,EAAAD,EAA/F3G,KAA+F6G,EAAAD,EAAvFxF,iBAAuF,IAAAyF,EAA3E,EAA2EA,EAAAC,EAAAF,EAAxEvF,aAAwE,IAAAyF,EAAhE,GAAgEA,EAAAC,EAAAH,EAA5DI,aAA4D,IAAAD,EAApD,EAAoDA,EAA/CtC,EAA+CkC,EAA/ClC,MAElE,OACE3D,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,SACvFtG,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAEsC,QAAS,OAAQC,WAAY,WACxCzC,EACD3D,EAAAC,EAAAC,cAAA,OACE2D,MAAO,CAAE0C,WAAY,OACrBtF,UAAS,eACTuF,MARK,GASLC,OATK,GAULC,QAAO,GAAAxF,QAAK,KAAL,KAAAA,QAAwB,KAAxB,KAAAA,OAVF,GAUE,KAAAA,OAVF,KAYLlB,EAAAC,EAAAC,cAACC,EAAD,CAAKG,UAAWA,EAAWC,MAAO,IAAKE,MAAOkG,GAAU/F,UAAU,YAClEZ,EAAAC,EAAAC,cAACC,EAAD,CAAKG,UAAWA,EAAWC,MAAOA,EAAOE,MAAOkG,OAGpD3G,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAE2C,MAAO,OAAQ1C,UAAW,WAAaoC,EAArD,OAIAU,EAAiB,SAAAC,GAAoF,IAAjF3H,EAAiF2H,EAAjF3H,KAAMqF,EAA2EsC,EAA3EtC,aAC9B,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACoF,EAAD,CAAqBpG,KAAMA,EAAMqF,aAAcA,KAEjDvE,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKoB,UACZ2C,IAAK,EACLxB,IAAK,IACLyB,KAAM,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYoB,UAAWzB,SAG1DmB,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKqB,MACZ0C,IAAK,EACLxB,IAAK,IACLyB,KAAM,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYqB,MAAO1B,SAGtDmB,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKgH,MACZjD,IAAK,EACLxB,IAAK,IACLyB,KAAM,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYgH,MAAOrH,WAMtDiI,EAAgB,SAAAC,GAAiE,IAAAC,EAAAD,EAA9D7H,KAAQoB,EAAsD0G,EAAtD1G,UAAsD2G,EAAAD,EAA3CE,aAA2C,IAAAD,EAAnC,EAAmCA,EAErF,OACEjH,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,SACvFtG,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAEsC,QAAS,OAAQC,WAAY,WAA3C,eAEEpG,EAAAC,EAAAC,cAAA,OACE2D,MAAO,CAAE0C,WAAY,OACrBtF,UAAS,eACTuF,MARK,GASLC,OATK,GAULC,QAAO,GAAAxF,QAAK,KAAL,KAAAA,QAAwB,KAAxB,KAAAA,OAVF,GAUE,KAAAA,OAVF,KAYLlB,EAAAC,EAAAC,cAACC,EAAD,CAAKG,UAAWA,EAAWC,MAAO,IAAKE,MAAOkG,GAAU/F,UAAU,YAClEZ,EAAAC,EAAAC,cAACC,EAAD,CAAKG,UAAWA,EAAWC,MAAO,EAAGE,MAAOkG,OAGhD3G,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAE2C,MAAO,OAAQ1C,UAAW,WAAaoD,KAKrDC,EAAsB,SAAAC,GAAyF,IAAtFlI,EAAsFkI,EAAtFlI,KAAMqF,EAAgF6C,EAAhF7C,aACnC,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKoB,UACZ2C,IAAK,EACLxB,IAAK,IACLyB,KAAM,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYoB,UAAWzB,SAG1DmB,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKgI,MACZjE,IAAK,EACLxB,IAAK,EACLyB,KAAM,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYgI,MAAOrI,WAOtDwI,EAAkB,WACtB,OAAOrH,EAAAC,EAAAC,cAAA,QAAM2D,MAAO,CAAEC,UAAW,WAA1B,iBAGHwD,EAAU,SAAAC,GAAiC,IAA9BrI,EAA8BqI,EAA9BrI,KACjB,OACEc,EAAAC,EAAAC,cAAA,QAAM2D,MAAO,CAAEC,UAAW,WAA1B,eAEG5E,EAAKsI,QACJxH,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8D,SAAA,KACE/D,EAAAC,EAAAC,cAAA,WACChB,EAAKsI,QAAQ7J,OAAS,EAAIuB,EAAKsI,QAAQC,UAAU,EAAG,GAAKvI,EAAKsI,QAAQC,UAAU,EAAG,GAAK,OAEzF,OAKJC,EAAgB,SAAAC,GAAmF,IAAhFzI,EAAgFyI,EAAhFzI,KAAMqF,EAA0EoD,EAA1EpD,aAC7B,OACEvE,EAAAC,EAAAC,cAAA,gDAEEF,EAAAC,EAAAC,cAAA,SACEf,KAAK,OACLN,MAAOK,EAAKoB,UACZ6C,SAAU,SAAAG,GACRiB,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYsI,QAASlE,EAAEE,OAAO3E,cAQ9C+I,EAAgB,SAAAC,GAAiF,IAAAC,EAAAD,EAA9E3I,KAA8E6I,EAAAD,EAAtExH,iBAAsE,IAAAyH,EAA1D,EAA0DA,EAAAC,EAAAF,EAAvDvH,aAAuD,IAAAyH,EAA/C,GAA+CA,EAAAC,EAAAH,EAA3C5B,aAA2C,IAAA+B,EAAnC,EAAmCA,EAErG,OACEjI,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAEsC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,SACvFtG,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAEsC,QAAS,OAAQC,WAAY,WAA3C,eAEEpG,EAAAC,EAAAC,cAAA,OACE2D,MAAO,CAAE0C,WAAY,OACrBtF,UAAS,eACTuF,MARK,GASLC,OATK,GAULC,QAAO,GAAAxF,QAAK,KAAL,KAAAA,QAAwB,KAAxB,KAAAA,OAVF,GAUE,KAAAA,OAVF,KAYLlB,EAAAC,EAAAC,cAACC,EAAD,CAAKG,UAAWA,EAAWC,MAAO,IAAKE,MAAOkG,GAAU/F,UAAU,YAClEZ,EAAAC,EAAAC,cAACC,EAAD,CAAKG,UAAWA,EAAWC,MAAOA,EAAOE,MAAOkG,OAGpD3G,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAE2C,MAAO,OAAQ1C,UAAW,WAAaoC,EAArD,OAIAgC,EAAsB,SAAAC,GAAyF,IAAtFjJ,EAAsFiJ,EAAtFjJ,KAAMqF,EAAgF4D,EAAhF5D,aACnC,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKoB,UACZ2C,IAAK,EACLxB,IAAK,IACLyB,KAAM,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYoB,UAAWzB,SAG1DmB,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKqB,MACZ0C,IAAK,EACLxB,IAAK,IACLyB,KAAM,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYqB,MAAO1B,SAGtDmB,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACyF,EAAD,CACE9G,MAAOK,EAAKgH,MACZjD,IAAK,EACLxB,IAAK,IACLyB,KAAM,EACNC,SAAU,SAAAtE,GAAK,OAAI0F,EAAa/F,OAAAS,EAAA,EAAAT,CAAA,GAAKU,EAAN,CAAYgH,MAAOrH,WAgBtDuJ,EAAY,IAAIC,IA6Nf,SAASC,GAAapJ,GAC3B,IAAMqJ,EAAUH,EAAUI,IAAItJ,GAC9B,IAAKqJ,EACH,MAAM,IAAIE,MAAM,gBAElB,OAAOF,EAhOTH,EAAUM,IAAI5F,EAAa6F,IAAK,CAC9BC,KAAM,SAACC,GAAD,MAAyB,CAAE1J,KAAM2D,EAAa6F,IAAKvJ,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,OAC5FC,KAAM,SAAAC,GAAA,OAAAxK,OAAAyK,EAAA,EAAAzK,CAAAwK,GAAmBhJ,EAAAC,EAAAC,cAACgJ,EAAD,CAAkBvF,MAAM,OACjDwF,OAAQ,kBAAM,QAEhBf,EAAUM,IAAI5F,EAAasG,MAAO,CAChCR,KAAM,SAACC,GAAD,MAAyB,CAAE1J,KAAM2D,EAAasG,MAAOhK,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,OAC9FC,KAAM,SAAAM,GAAA,OAAA7K,OAAAyK,EAAA,EAAAzK,CAAA6K,GAAmBrJ,EAAAC,EAAAC,cAACgJ,EAAD,CAAkBvF,MAAM,SAAIC,YAAY,kBACjEuF,OAAQ,kBAAM,QAEhBf,EAAUM,IAAI5F,EAAawG,KAAM,CAC/BV,KAAM,SAACC,GAAD,MAAyB,CAAE1J,KAAM2D,EAAawG,KAAMlK,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,OAC7FC,KAAM,SAAAQ,GAAA,OAAA/K,OAAAyK,EAAA,EAAAzK,CAAA+K,GAAmBvJ,EAAAC,EAAAC,cAACgJ,EAAD,CAAkBvF,MAAM,SAAIC,YAAY,kBACjEuF,OAAQ,kBAAM,QAEhBf,EAAUM,IAAI5F,EAAa0G,OAAQ,CACjCZ,KAAM,SAACC,GAAD,MAAyB,CAAE1J,KAAM2D,EAAa0G,OAAQpK,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,OAC/FC,KAAM,SAAAU,GAAA,OAAAjL,OAAAyK,EAAA,EAAAzK,CAAAiL,GAAmBzJ,EAAAC,EAAAC,cAACgJ,EAAD,CAAkBvF,MAAM,SAAIC,YAAY,kBACjEuF,OAAQ,kBAAM,QAEhBf,EAAUM,IAAI5F,EAAa4G,QAAS,CAClCd,KAAM,SAACC,GAAD,MAAyB,CAAE1J,KAAM2D,EAAa4G,QAAStK,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,OAChGC,KAAM,SAAAY,GAAA,OAAAnL,OAAAyK,EAAA,EAAAzK,CAAAmL,GAAmB3J,EAAAC,EAAAC,cAACgJ,EAAD,CAAkBvF,MAAM,SAAIC,YAAY,kBACjEuF,OAAQ,kBAAM,QAEhBf,EAAUM,IAAI5F,EAAa8G,KAAM,CAC/BhB,KAAM,SAACC,GAAD,MAAyB,CAAE1J,KAAM2D,EAAa8G,KAAMxK,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,OAC7FC,KAAM,SAAAc,GAAA,OAAArL,OAAAyK,EAAA,EAAAzK,CAAAqL,GAAmB7J,EAAAC,EAAAC,cAACgJ,EAAD,CAAkBvF,MAAM,SAAIC,YAAY,wBACjEuF,OAAQ,kBAAM,QAGhBf,EAAUM,IAAI5F,EAAagH,KAAM,CAC/BlB,KAAM,SAACC,GAAD,MACH,CAAE1J,KAAM2D,EAAagH,KAAM1K,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KAAMjK,MAAO,IAC9EkK,KAAM,SAAAgB,GAAA,IAAG7K,EAAH6K,EAAG7K,KAAH,OAAyBc,EAAAC,EAAAC,cAAC8J,EAAD,CAAoB9K,KAAMA,EAA4ByE,MAAM,YAC3FwF,OAAQ,SAAAc,GAAA,IAAG/K,EAAH+K,EAAG/K,KAAMqF,EAAT0F,EAAS1F,aAAT,OACNvE,EAAAC,EAAAC,cAACgK,EAAD,CACEhL,KAAMA,EACNqF,aAAcA,EACdtB,IAAK,EACLxB,IAAK,IACLyB,KAAM,OAKZkF,EAAUM,IAAI5F,EAAaqH,MAAO,CAChCvB,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAaqH,MACnB/K,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1DpF,cAAe,UACfnG,MAAO,KAEXkK,KAAM,SAAAsB,GAAA,IAAGnL,EAAHmL,EAAGnL,KAAH,OAAyBc,EAAAC,EAAAC,cAACoK,EAAD,CAAWpL,KAAMA,EAAmByE,MAAM,YACzEwF,OAAQ,SAAAoB,GAAA,IAAGrL,EAAHqL,EAAGrL,KAAMqF,EAATgG,EAAShG,aAAT,OACNvE,EAAAC,EAAAC,cAACsK,EAAD,CAAiBtL,KAAMA,EAAmBqF,aAAcA,EAActB,IAAK,EAAGxB,IAAK,IAAOyB,KAAM,OAGpGkF,EAAUM,IAAI5F,EAAa2H,KAAM,CAC/B7B,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAa2H,KACnBrL,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1DpF,cAAe,UACfnG,MAAO,KAEXkK,KAAM,SAAA2B,GAAA,IAAGxL,EAAHwL,EAAGxL,KAAH,OAAyBc,EAAAC,EAAAC,cAACoK,EAAD,CAAWpL,KAAMA,EAAmByE,MAAM,YACzEwF,OAAQ,SAAAwB,GAAA,IAAGzL,EAAHyL,EAAGzL,KAAMqF,EAAToG,EAASpG,aAAT,OACNvE,EAAAC,EAAAC,cAACsK,EAAD,CAAiBtL,KAAMA,EAAmBqF,aAAcA,EAActB,IAAK,EAAGxB,IAAK,IAAKyB,KAAM,OAGlGkF,EAAUM,IAAI5F,EAAa8H,SAAU,CACnChC,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAa8H,SACnBxL,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1DpF,cAAe,UACfnG,MAAO,MAEXkK,KAAM,SAAA8B,GAAA,IAAG3L,EAAH2L,EAAG3L,KAAH,OAAyBc,EAAAC,EAAAC,cAACoK,EAAD,CAAWpL,KAAMA,EAAmByE,MAAM,YACzEwF,OAAQ,SAAA2B,GAAA,IAAG5L,EAAH4L,EAAG5L,KAAMqF,EAATuG,EAASvG,aAAT,OACNvE,EAAAC,EAAAC,cAACsK,EAAD,CAAiBtL,KAAMA,EAAmBqF,aAAcA,EAActB,IAAK,EAAGxB,IAAK,IAAMyB,KAAM,OAGnGkF,EAAUM,IAAI5F,EAAaiI,OAAQ,CACjCnC,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAaiI,OACnB3L,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1DpF,cAAe,UACfnG,MAAO,KAEXkK,KAAM,SAAAiC,GAAA,IAAG9L,EAAH8L,EAAG9L,KAAH,OAAyBc,EAAAC,EAAAC,cAACoK,EAAD,CAAWpL,KAAMA,EAAmByE,MAAM,kBACzEwF,OAAQ,SAAA8B,GAAA,IAAG/L,EAAH+L,EAAG/L,KAAMqF,EAAT0G,EAAS1G,aAAT,OACNvE,EAAAC,EAAAC,cAACsK,EAAD,CAAiBtL,KAAMA,EAAmBqF,aAAcA,EAActB,IAAK,EAAGxB,IAAK,IAAKyB,KAAM,OAGlGkF,EAAUM,IAAI5F,EAAaoI,YAAa,CACtCtC,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAaoI,YACnB9L,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1DpF,cAAe,UACfnG,MAAO,KAEXkK,KAAM,SAAAoC,GAAA,IAAGjM,EAAHiM,EAAGjM,KAAH,OAAyBc,EAAAC,EAAAC,cAACoK,EAAD,CAAWpL,KAAMA,EAAmByE,MAAM,kBACzEwF,OAAQ,SAAAiC,GAAA,IAAGlM,EAAHkM,EAAGlM,KAAMqF,EAAT6G,EAAS7G,aAAT,OACNvE,EAAAC,EAAAC,cAACsK,EAAD,CAAiBtL,KAAMA,EAAmBqF,aAAcA,EAActB,IAAK,EAAGxB,IAAK,IAAKyB,KAAM,OAGlGkF,EAAUM,IAAI5F,EAAauI,YAAa,CACtCzC,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAauI,YACnBjM,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1DpF,cAAe,UACfnG,MAAO,IAEXkK,KAAM,SAAAuC,GAAA,IAAGpM,EAAHoM,EAAGpM,KAAH,OAAyBc,EAAAC,EAAAC,cAACoK,EAAD,CAAWpL,KAAMA,EAAmByE,MAAM,kBACzEwF,OAAQ,SAAAoC,GAAA,IAAGrM,EAAHqM,EAAGrM,KAAMqF,EAATgH,EAAShH,aAAT,OACNvE,EAAAC,EAAAC,cAACsK,EAAD,CAAiBtL,KAAMA,EAAmBqF,aAAcA,EAActB,IAAK,EAAGxB,IAAK,GAAIyB,KAAM,OAIjGkF,EAAUM,IAAI5F,EAAa0I,OAAQ,CACjC5C,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAa0I,OACnBpM,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1DpF,cAAe,UACfnG,MAAO,IAEXkK,KAAM,SAAA0C,GAAA,IAAGvM,EAAHuM,EAAGvM,KAAH,OAAyBc,EAAAC,EAAAC,cAACoK,EAAD,CAAWpL,KAAMA,EAAmByE,MAAM,kBACzEwF,OAAQ,SAAAuC,GAAA,IAAGxM,EAAHwM,EAAGxM,KAAMqF,EAATmH,EAASnH,aAAT,OACNvE,EAAAC,EAAAC,cAACsK,EAAD,CAAiBtL,KAAMA,EAAmBqF,aAAcA,EAActB,IAAK,EAAGxB,IAAK,EAAGyB,KAAM,OAGhGkF,EAAUM,IAAI5F,EAAa6I,UAAW,CACpC/C,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAa6I,UACnBvM,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1D9J,UAAW,EACXC,MAAO,GACP2F,MAAO,MAEX6C,KAAM,SAAA6C,GAAA,IAAG1M,EAAH0M,EAAG1M,KAAH,OAAyBc,EAAAC,EAAAC,cAAC2L,EAAD,CAAU3M,KAAMA,EAAkByE,MAAM,OACvEwF,OAAQ,SAAA2C,GAAA,IAAG5M,EAAH4M,EAAG5M,KAAMqF,EAATuH,EAASvH,aAAT,OACNvE,EAAAC,EAAAC,cAAC6L,EAAD,CAAgB7M,KAAMA,EAAkBqF,aAAcA,OAG1D6D,EAAUM,IAAI5F,EAAakJ,WAAY,CACrCpD,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAakJ,WACnB5M,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCjE,OAAQgE,GAAOA,EAAKhE,QAA4BjC,EAAUwH,MAC1D9J,UAAW,EACXC,MAAO,GACP2F,MAAO,MAEX6C,KAAM,SAAAkD,GAAA,IAAG/M,EAAH+M,EAAG/M,KAAH,OAAyBc,EAAAC,EAAAC,cAAC2L,EAAD,CAAU3M,KAAMA,EAAkByE,MAAM,OACvEwF,OAAQ,SAAA+C,GAAA,IAAGhN,EAAHgN,EAAGhN,KAAMqF,EAAT2H,EAAS3H,aAAT,OACNvE,EAAAC,EAAAC,cAAC6L,EAAD,CAAgB7M,KAAMA,EAAkBqF,aAAcA,OAI1D6D,EAAUM,IAAI5F,EAAaqJ,UAAW,CACpCvD,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAaqJ,UACnB/M,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCxI,UAAW,EACX4G,MAAO,MAEX6B,KAAM,SAAAqD,GAAA,IAAGlN,EAAHkN,EAAGlN,KAAH,OAAyBc,EAAAC,EAAAC,cAACmM,EAAD,CAAenN,KAAMA,KACpDiK,OAAQ,SAAAmD,GAAA,IAAGpN,EAAHoN,EAAGpN,KAAMqF,EAAT+H,EAAS/H,aAAT,OACNvE,EAAAC,EAAAC,cAACqM,EAAD,CAAqBrN,KAAMA,EAAuBqF,aAAcA,OAIpE6D,EAAUM,IAAI5F,EAAa0J,YAAa,CACtC5D,KAAM,SAACC,GAAD,MAAyB,CAAE1J,KAAM2D,EAAa0J,YAAapN,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,OACpGC,KAAM,SAAA0D,GAAA,OAAAjO,OAAAyK,EAAA,EAAAzK,CAAAiO,GAAmBzM,EAAAC,EAAAC,cAACwM,EAAD,OACzBvD,OAAQ,kBAAM,QAGhBf,EAAUM,IAAI5F,EAAa6J,IAAK,CAC9B/D,KAAM,SAACC,GAAD,MAAyB,CAAE1J,KAAM2D,EAAa6J,IAAKvN,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,OAC5FC,KAAM,SAAA6D,GAAA,IAAG1N,EAAH0N,EAAG1N,KAAH,OAAyBc,EAAAC,EAAAC,cAAC2M,EAAD,CAAS3N,KAAMA,KAC9CiK,OAAQ,SAAA2D,GAAA,IAAG5N,EAAH4N,EAAG5N,KAAMqF,EAATuI,EAASvI,aAAT,OACNvE,EAAAC,EAAAC,cAAC6M,EAAD,CAAe7N,KAAMA,EAAiBqF,aAAcA,OAIxD6D,EAAUM,IAAI5F,EAAakK,UAAW,CACpCpE,KAAM,SAACC,GAAD,MACH,CACC1J,KAAM2D,EAAakK,UACnB5N,KAAMyJ,EAAOA,EAAKzJ,KAAOwD,EAAUkG,KACnCxI,UAAW,EACXC,MAAO,GACP2F,MAAO,MAEX6C,KAAM,SAAAkE,GAAA,IAAG/N,EAAH+N,EAAG/N,KAAH,OAAyBc,EAAAC,EAAAC,cAACgN,EAAD,CAAehO,KAAMA,KACpDiK,OAAQ,SAAAgE,GAAA,IAAGjO,EAAHiO,EAAGjO,KAAMqF,EAAT4I,EAAS5I,aAAT,OACNvE,EAAAC,EAAAC,cAACkN,EAAD,CAAqBlO,KAAMA,EAAuBqF,aAAcA,OCjoBpE,IAAM8I,GAAI,IAAIhF,IAUd,SAASiF,GAATxN,GAA0E,IAAzDV,EAAyDU,EAAzDV,KAAyDmO,EAAAzN,EAAnDiB,aAAmD,IAAAwM,EAA3C,GAA2CA,EAClE1J,EAAQwJ,GAAE7E,IAAIpJ,GACpB,OAAOyE,EAAQ7D,EAAAC,EAAAC,cAAA,OAAK2D,MAAKrF,OAAAS,EAAA,EAAAT,CAAA,GAAOqF,EAAP,CAAc9C,QAAOyM,WAAYzM,EAAQ,YAASsC,KAA5D,UAAmF,KAG7F,SAAS0F,GAATrF,GAA8C,IAA9B+J,EAA8B/J,EAA9B+J,SAA8BC,EAI/C/N,IAJ+CgO,EAAAD,EAEjD5O,MAASrB,EAFwCkQ,EAExClQ,KAAMC,EAFkCiQ,EAElCjQ,QAASI,EAFyB6P,EAEzB7P,eAAgBC,EAFS4P,EAET5P,YAAaH,EAFJ+P,EAEI/P,cAFJgQ,EAAAF,EAGjDpP,QAAWuP,EAHsCD,EAGtCC,aAAoBC,EAHkBF,EAGxBG,KAHwBC,EAMpBC,YAAQ,CACrCC,KAAM,CAAE/O,KAAM,eACdgP,MAAO,WACLL,EAAWL,IAEbW,QAAS,SAAAC,GAAO,MAAK,CAAEC,aAAcD,EAAQC,iBAXIC,EAAA/P,OAAAgQ,EAAA,EAAAhQ,CAAAwP,EAAA,GAM1CM,EAN0CC,EAAA,GAM1CD,WAAcP,EAN4BQ,EAAA,GAc7CE,EACJ1Q,GAAkC,OAAnBD,GAA2BA,EAAekB,IAAMyO,EAASzO,GAAKlB,EAAeiB,IAAM0O,EAAS1O,EACvGd,EAAUL,IAAkBL,EAAYM,KAAOJ,EAAOC,EACtDwB,EAAOuP,EAAW1Q,EAAcE,EAAQwP,EAAS1O,GAAG0O,EAASzO,GAEnE,IAAKE,EACH,OAAO,KAGT,IAAMwP,EAASpG,GAAapJ,EAAKC,MAEjC,OACEa,EAAAC,EAAAC,cAAA,OACEyO,IAAKZ,EACLnJ,QAAS,kBAAMiJ,EAAaJ,IAC5B5J,MAAO,CACL4C,OAAQ,OACRD,MAAO,OACPL,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBuI,QAASN,EAAa,GAAM,EAC5Bb,SAAU,aAGZzN,EAAAC,EAAAC,cAAA,OACE2D,MAAO,CACL4C,OAAQ,MACRD,MAAO,MACPL,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBwI,gBAAiB,SAGnB7O,EAAAC,EAAAC,cAACwO,EAAO3F,KAAR,CAAa7J,KAAMA,KAEpBA,EAAI,OAAac,EAAAC,EAAAC,cAACoN,GAAD,CAAOlO,KAAMF,EAAI,OAAY6B,MAAM,SAAY,KACjEf,EAAAC,EAAAC,cAACoN,GAAD,CAAOlO,KAAMF,EAAKE,QCpEjB,SAAS0P,GAAThP,GAAwE,IAAlD2N,EAAkD3N,EAAlD2N,SAAU9G,EAAwC7G,EAAxC6G,KAAwC+G,EAIzE/N,IAJyEgO,EAAAD,EAE3E5O,MAASrB,EAFkEkQ,EAElElQ,KAAMC,EAF4DiQ,EAE5DjQ,QAASI,EAFmD6P,EAEnD7P,eAAgBC,EAFmC4P,EAEnC5P,YAAaH,EAFsB+P,EAEtB/P,cAFsBgQ,EAAAF,EAG3EpP,QAAiByQ,EAH0DnB,EAGhEoB,KAAkBnB,EAH8CD,EAG9CC,aAGzBY,EACJ1Q,GAAkC,OAAnBD,GAA2BA,EAAekB,IAAMyO,EAASzO,GAAKlB,EAAeiB,IAAM0O,EAAS1O,EAEvGkQ,EAASR,EAAW,iBAAmB,GATgCS,EAWlDC,YAAQ,CACjCC,OAAQ,cACRJ,KAAM,kBAAMD,EAAWtB,IACvBW,QAAS,SAAAC,GAAO,MAAK,CAAEgB,SAAUhB,EAAQgB,aAdkCC,EAAA9Q,OAAAgQ,EAAA,EAAAhQ,CAAA0Q,EAAA,GAWpEG,EAXoEC,EAAA,GAWpED,OAAUL,EAX0DM,EAAA,GAgBvErR,EAAUL,IAAkBL,EAAYM,KAAOJ,EAAOC,EACtDwB,EAAOuP,EAAW1Q,EAAcE,EAAQwP,EAAS1O,GAAG0O,EAASzO,GAEnE,OACEgB,EAAAC,EAAAC,cAAA,OACEyO,IAAKK,EACLnL,MAAO,CACL4J,SAAU,WACVtH,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBwI,gBAAiB,OACjBpI,OAAM,GAAAvF,OAAKyF,EAAL,MACNH,MAAK,GAAAtF,OAAKyF,EAAL,MACLiI,QAASS,EAAS,GAAM,IAG1BrP,EAAAC,EAAAC,cAAA,OACE2D,MAAO,CACLsC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBI,OAAM,GAAAvF,OAAKyF,EAAL,MACNH,MAAK,GAAAtF,OAAKyF,EAAL,QAGG,OAATzH,EACCc,EAAAC,EAAAC,cAACqP,GAAD,CAAM9B,SAAUA,IAEhBzN,EAAAC,EAAAC,cAAA,UACE2D,MAAO,CACLsC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBwI,gBAAiB,UACjBrI,MAAK,GAAAtF,OAAKyF,EAAO,GAAZ,MACLF,OAAM,GAAAvF,OAAKyF,EAAO,GAAZ,MACNsI,OAAQ,kBAEVrK,QAAS,kBAAMiJ,EAAaJ,KAV9B,MAgBJzN,EAAAC,EAAAC,cAAA,OACE2D,MAAO,CACL4J,SAAU,WACVjH,MAAK,GAAAtF,OAAKyF,EAAO,EAAZ,MACLF,OAAM,GAAAvF,OAAKyF,EAAO,EAAZ,MACN6I,cAAe,OACfP,aDjEV5B,GAAE3E,IAAI,KAAM,CAAE+E,SAAU,WAAYgC,IAAK,IAAKC,KAAM,QACpDrC,GAAE3E,IAAI,UAAW,CAAE+E,SAAU,WAAYgC,IAAK,IAAKrF,MAAO,IAAKnJ,UAAW,kBAC1EoM,GAAE3E,IAAI,QAAS,CAAE+E,SAAU,WAAYgC,IAAK,MAAOrF,MAAO,IAAKnJ,UAAW,kBAC1EoM,GAAE3E,IAAI,YAAa,CAAE+E,SAAU,WAAYkC,OAAQ,IAAKvF,MAAO,IAAKnJ,UAAW,mBAC/EoM,GAAE3E,IAAI,OAAQ,CAAE+E,SAAU,WAAYkC,OAAQ,IAAKD,KAAM,MAAOzO,UAAW,mBAC3EoM,GAAE3E,IAAI,WAAY,CAAE+E,SAAU,WAAYkC,OAAQ,IAAKD,KAAM,IAAKzO,UAAW,mBAC7EoM,GAAE3E,IAAI,OAAQ,CAAE+E,SAAU,WAAYgC,IAAK,MAAOC,KAAM,IAAKzO,UAAW,mBACxEoM,GAAE3E,IAAI,SAAU,CAAE+E,SAAU,WAAYgC,IAAK,IAAKC,KAAM,IAAKzO,UAAW,mBEXxE,IAAM2O,GAAc,IAEb,SAASC,KAQd,IARsB,IAAAnC,EAIlB/N,IAJkBgO,EAAAD,EAEpB5O,MAASnB,EAFWgQ,EAEXhQ,OAAQC,EAFG+P,EAEH/P,cAAeH,EAFZkQ,EAEYlQ,KAAMC,EAFlBiQ,EAEkBjQ,QAC3BoS,EAHSpC,EAGpBpP,QAAWwR,gBAGPnJ,EAAOiJ,GAAcjS,EACrBoS,EAAQ,GACLhR,EAAI,EAAGA,EAAIpB,EAAQoB,IAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1B+Q,EAAM1R,KAAK2B,EAAAC,EAAAC,cAAC4O,GAAD,CAAYlQ,IAAG,GAAAsC,OAAKlC,EAAL,KAAAkC,OAAUnC,GAAK0O,SAAU,CAAEzO,IAAGD,KAAK4H,KAAMA,KAIvE,OACE3G,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAEsC,QAAS,OAAQG,SAAU,OAAQE,MAAK,SACpDxG,EAAAC,EAAAC,cAAA,OAAK2D,MAAO,CAAEsC,QAAS,OAAQG,SAAU,OAAQE,MAAK,GAAAtF,OAAK0O,GAAL,QAAyBG,GAC/E/P,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACE2D,MAAO,CAAEoL,OAAQ,iBAAkBxI,OAAQ,QAASD,MAAO,QAASzF,MAAO,QAC3ElC,MAAOmR,KAAKC,UAAUrS,IAAkBL,EAAYM,KAAOJ,EAAOC,EAAS,KAAM,KACjFyF,SAAU,SAAAG,GAAC,OAAIwM,EAAgBE,KAAKE,MAAM5M,EAAEE,OAAO3E,aCxBtD,SAASsR,KAAkB,IAAAzC,EAI5B/N,IAFO/B,EAFqB8P,EAE9B5O,MAASlB,cACEwS,EAHmB1C,EAG9BpP,QAAW8R,iBAGb,OACEpQ,EAAAC,EAAAC,cAAA,WACGtC,EACDoC,EAAAC,EAAAC,cAAA,QAAM2D,MAAO,CAAE0C,WAAY,QACzBvG,EAAAC,EAAAC,cAAA,UAAQ0E,QAAS,kBAAMwL,EAAiB7S,EAAYM,QAApD,sBACAmC,EAAAC,EAAAC,cAAA,UAAQ0E,QAAS,kBAAMwL,EAAiB7S,EAAY8S,WAApD,8BCTD,SAASC,KACd,IAAMC,EAAU5Q,IAGR5B,EADMwS,EAAQzR,MACdf,YACR,IAAKA,EACH,OAAO,KANkB,IAAAyS,EAQuCD,EAAQjS,QAAlEmS,EARmBD,EAQnBC,kBAAmBC,EARAF,EAQAE,cAAeC,EARfH,EAQeG,OAAgBC,EAR/BJ,EAQuBK,OAU5CnC,EAAS3Q,EAAcuK,GAAavK,EAAYoB,MAAQ,KAE9D,OACEa,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACG6C,EAAmB2B,IAAI,SAAAC,GAAC,OACvB3E,EAAAC,EAAAC,cAAA,UAAQtB,IAAK+F,EAAGC,SAdHzF,EAcwBwF,EAdD,WAC1C,IACMmM,EADUxI,GAAanJ,GACXyJ,KAAK7K,GAEvB,OADAgT,QAAQpE,IAAImE,GACLL,EAAkBjS,OAAAS,EAAA,EAAAT,CAAA,GAAKsS,OAWrBnM,GAfS,IAACxF,KAmBjBa,EAAAC,EAAAC,cAAA,SACG2C,EAAgB6B,IAAI,SAAAC,GAAC,OACpB3E,EAAAC,EAAAC,cAAA,UAAQtB,IAAK+F,EAAGC,SAfHxF,EAewBuF,EAfJ,kBAAM5G,GAAe0S,EAAkBjS,OAAAS,EAAA,EAAAT,CAAA,GAAKT,EAAN,CAAmBqB,aAgBvFuF,GAhBS,IAACvF,KAoBhBsP,GAAU3Q,EAAciC,EAAAC,EAAAC,cAACwO,EAAOvF,OAAR,CAAejK,KAAMnB,EAAawG,aAAckM,IAAwB,KACjGzQ,EAAAC,EAAAC,cAAA,UAAQ0E,QAAS,kBAAM8L,MAAvB,UACA1Q,EAAAC,EAAAC,cAAA,UAAQ0E,QAAS,kBAAM+L,MAAvB,UACA3Q,EAAAC,EAAAC,cAAA,UAAQ0E,QAAS,kBAAMgM,MAAvB,kBCnC2BnR,YAAuC,CACtEkN,IAAK,SAAC7N,GAA2C,QAAAkS,EAAAC,UAAAtT,OAAvBuT,EAAuB,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAvBF,EAAuBE,EAAA,GAAAH,UAAAG,GAC/C,OAAO5S,OAAAS,EAAA,EAAAT,CAAA,GAAKM,EAAZ,CAAmB6N,IAAKuE,EAASG,UAAUnQ,OAAOpC,EAAM6N,UAFpDjN,eAMK4R,MANK1R,WAOL2R,GAAc,SAAAzR,GAA2C,IAAxCC,EAAwCD,EAAxCC,SAC5B,OAAOC,EAAAC,EAAAC,cAACsR,GAAD,CAAU3S,MAAO,CAAE8N,IAAK,KAAO5M,ICdjC,SAAS0R,GAAT3R,GAAkBtB,OAAAyK,EAAA,EAAAzK,CAAAsB,GACvB,IACMhB,EADUa,IACMb,MAFA4S,EAMlBJ,KAFO3E,EAJW+E,EAIpB5S,MAAS6N,IACOgF,EALID,EAKpBpT,QAAWqO,IAUb,OARAiF,kBAAQ,WACN,IAAMC,EAAKrT,OAAAS,EAAA,EAAAT,CAAA,GAAQM,GACbrB,EAAOoU,EAAMpU,YACZoU,EAAMpU,YACNoU,EAAMnU,QACbiU,EAAE,OAAQ3B,KAAKC,UAAU4B,EAAO,KAAM,MAAO7B,KAAKC,UAAUxS,GAAO,SAClE,CAACqB,IAEGkB,EAAAC,EAAAC,cAAA,WAAMyM,EAAImF,KAAK,OCfxB,IAAMC,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOnS,EAAAC,EAAAC,cCKT,WACL,OACEF,EAAAC,EAAAC,cAACkS,GAAD,KACEpS,EAAAC,EAAAC,cAACmS,EAAD,CAAe1U,OAAQ,GACrBqC,EAAAC,EAAAC,cAACiQ,GAAD,MACAnQ,EAAAC,EAAAC,cAACoS,EAAA,EAAD,CAAaC,QAASC,KACpBxS,EAAAC,EAAAC,cAAC2P,GAAD,OAEF7P,EAAAC,EAAAC,cAACoQ,GAAD,MACAtQ,EAAAC,EAAAC,cAACuR,GAAD,SDdQ,MAAiBM","file":"static/js/main.6f808b4a.chunk.js","sourcesContent":["export enum ProgramType {\n  MAIN = 'main',\n  MISSILE = 'missile'\n}\n","import React, { ReactNode } from 'react';\nimport { createTinyContext, InternalActions } from 'tiny-context';\nimport { Xy } from './Xy';\n// import { LogContext } from './LogProvider';\nimport { ProgramType } from './ProgramType';\nimport { MainChipType, MissileChipType } from './ChipType';\nimport { Direction } from './Direction';\n\nexport type ChipType = MainChipType | MissileChipType;\n\nexport interface Chip {\n  type: MainChipType;\n  next: Direction;\n  [key: string]: any;\n}\n\ntype Program = (Chip | null)[][];\n\ninterface BoardState {\n  main: Program;\n  missile: Program;\n  length: number;\n  targetProgram: ProgramType;\n  targetPosition: Xy | null;\n  editingChip: Chip | null;\n}\n\ninterface BoardAction {\n  setTargetProgram: (targetProgram: ProgramType) => Promise<void>;\n  drag: (position: Xy) => Promise<void>;\n  drop: (position: Xy) => Promise<void>;\n  startEditing: (position: Xy) => Promise<void>;\n  updateEditingChip: (chip: Chip) => Promise<void>;\n  finishEditing: () => Promise<void>;\n  cancel: () => Promise<void>;\n  delete: () => Promise<void>;\n  overrideProgram: (program: Program) => Promise<void>;\n}\n// [[{\"type\":\"scanAttack\",\"next\":\"downright\",\"branch\":\"right\",\"direction\":0,\"angle\":90,\"range\":100},{\"type\":\"back\",\"next\":\"right\"},{\"type\":\"descent\",\"next\":\"up\"},null],[{\"type\":\"ascent\",\"next\":\"left\"},{\"type\":\"altitude\",\"next\":\"down\",\"branch\":\"left\",\"greaterOrLess\":\"less\",\"value\":100},null,null],[{\"type\":\"turn\",\"next\":\"left\"},{\"type\":\"scanEnemy\",\"next\":\"left\",\"branch\":\"down\",\"direction\":0,\"angle\":180,\"range\":1000},{\"type\":\"random\",\"next\":\"right\",\"branch\":\"downright\",\"greaterOrLess\":\"greater\",\"value\":5},{\"type\":\"fireLaser\",\"next\":\"right\",\"direction\":0,\"force\":8}],[{\"type\":\"ahead\",\"next\":\"down\"},{\"type\":\"scanEnemy\",\"next\":\"left\",\"branch\":\"right\",\"direction\":0,\"angle\":60,\"range\":200},{\"type\":\"temperature\",\"next\":\"down\",\"branch\":\"up\",\"greaterOrLess\":\"less\",\"value\":80},{\"type\":\"fireMissile\",\"next\":\"down\"}]]\nconst defaultValue: BoardState = {\n  main: [],\n  missile: [],\n  length: 0,\n  targetProgram: ProgramType.MAIN,\n  targetPosition: null,\n  editingChip: null\n};\n\nconst createEmpty = (length: number) => {\n  const program: Program = [];\n  for (let i = 0; i < length; i++) {\n    const line = [];\n    for (let j = 0; j < length; j++) {\n      line.push(null);\n    }\n    program.push(line);\n  }\n  return program;\n};\n\nconst actions = new (class implements InternalActions<BoardState, BoardAction> {\n  private applyEdtingChip(state: BoardState) {\n    const { main, missile, targetPosition, targetProgram, editingChip } = state;\n    if (targetPosition === null || editingChip === null) {\n      return state;\n    }\n    const program = targetProgram === ProgramType.MAIN ? main : missile;\n    program[targetPosition.y][targetPosition.x] = editingChip;\n    return { ...state, editingChip: null, targetPosition: null };\n  }\n  private startEditingInternal(state: BoardState, targetPosition: Xy) {\n    const { main, missile, targetProgram } = state;\n    const program = targetProgram === ProgramType.MAIN ? main : missile;\n    const chip = program[targetPosition.y][targetPosition.x];\n    const editingChip: Chip = chip ? { ...chip } : { type: 'nop', next: 'down' };\n    // log(`startEditing ${JSON.stringify(editingChip)}`);\n    return { ...state, targetPosition, editingChip };\n  }\n  setTargetProgram(state: BoardState, targetProgram: ProgramType) {\n    const newState = this.applyEdtingChip(state);\n    return { ...newState, targetProgram };\n  }\n  drag(state: BoardState, targetPosition: Xy) {\n    const newState = this.applyEdtingChip(state);\n    // log('state change @ drag');\n    return { ...newState, editingChip: null, targetPosition };\n  }\n  drop(state: BoardState, dropPosition: Xy) {\n    const { main, missile, targetPosition, targetProgram } = state;\n    if (targetPosition === null) {\n      // log('state change @ error drop');\n      return;\n    }\n    const program = targetProgram === ProgramType.MAIN ? main : missile;\n    const chip = program[targetPosition.y][targetPosition.x];\n    if (program[dropPosition.y][dropPosition.x]) {\n      let newState: BoardState = { ...state, targetPosition: null };\n      newState = this.startEditingInternal(newState, targetPosition);\n      // log('state change @ rejct drop');\n      return { ...newState };\n    }\n    program[targetPosition.y][targetPosition.x] = null;\n    program[dropPosition.y][dropPosition.x] = chip;\n    const newState = this.startEditingInternal(state, dropPosition);\n    // log('state change @ accept drop');\n    return newState;\n  }\n  startEditing(state: BoardState, targetPosition: Xy) {\n    let newState = this.applyEdtingChip(state);\n    newState = this.startEditingInternal(newState, targetPosition);\n    // log('state change @ startEditing');\n    return newState;\n  }\n  updateEditingChip(state: BoardState, chip: Chip) {\n    // log('state change @ updateEditingChip');\n    return { ...state, editingChip: { ...chip } };\n  }\n  finishEditing(state: BoardState) {\n    const newState = this.applyEdtingChip(state);\n    // log('state change @ finishEditing');\n    return newState;\n  }\n  cancel(state: BoardState) {\n    // log('state change @ cancel');\n    return { ...state, editingChip: null, targetPosition: null };\n  }\n  delete(state: BoardState) {\n    const { main, missile, targetPosition, targetProgram } = state;\n    if (targetPosition === null) {\n      return;\n    }\n    const program = targetProgram === ProgramType.MAIN ? main : missile;\n    program[targetPosition.y][targetPosition.x] = null;\n    // log('state change @ delete');\n    return { ...state, editingChip: null, targetPosition: null };\n  }\n  overrideProgram(state: BoardState, program: Program) {\n    const { targetProgram } = state;\n    if (targetProgram === ProgramType.MAIN) {\n      state.main = program;\n    } else {\n      state.missile = program;\n    }\n    return state;\n  }\n})();\n\nconst { Provider, useContext } = createTinyContext<BoardState, BoardAction>(actions);\n\nexport const useBoardContext = useContext;\nexport const BoardProvider = ({ length, children }: { length: number; children: ReactNode }) => {\n  return (\n    <Provider\n      value={{\n        ...defaultValue,\n        length,\n        main: createEmpty(length),\n        missile: createEmpty(length)\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n","import * as React from 'react';\n\nexport interface ArcProps {\n  x?: number;\n  y?: number;\n  direction: number;\n  angle: number;\n  renge?: number;\n  fillColor?: string;\n  centerColor?: string;\n}\n\nexport default function Arc({\n  x = 0,\n  y = 0,\n  direction,\n  angle,\n  renge: argRenge = 0,\n  fillColor = '#d448',\n  centerColor = '#f00'\n}: ArcProps) {\n  const norenge = argRenge <= 0;\n  const renge = norenge ? 320 : argRenge;\n\n  const color = fillColor;\n\n  if (360 <= angle) {\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <circle r={renge} cy={0} cx={0} fill={color} />\n      </g>\n    );\n  }\n\n  const normalizedAngle = Math.max(0, angle);\n  const halfAngleRadian = (normalizedAngle * Math.PI) / 180 / 2;\n  const angleX = renge * Math.cos(halfAngleRadian);\n  const angleY = renge * Math.sin(halfAngleRadian);\n  const d = `\n    M 0,0\n    L ${angleX},${angleY}\n    A ${renge} ${renge} ${normalizedAngle / 2} ${normalizedAngle > 180 ? 1 : 0} 0 ${angleX},${-angleY}\n    Z\n  `;\n\n  return (\n    <g transform={`translate(${x},${y}) rotate(${direction}, 0, 0)`}>\n      <path d={d} fill={color} />\n      <line x1={0} y1={0} x2={renge} y2={0} strokeWidth=\"1\" stroke={centerColor} />\n    </g>\n  );\n}\n","export function stringToEnum<T extends string>(o: T[]): [{ [K in T]: K }, T[]] {\n  return [\n    o.reduce((a, c) => {\n      a[c] = c;\n      return a;\n    }, Object.create(null)),\n    o\n  ];\n}\n","import { stringToEnum } from \"./stringToEnum\";\n\nexport const [Direction, DirectionValues] = stringToEnum([\n  'up',\n  'down',\n  'left',\n  'right',\n  'upleft',\n  'upright',\n  'downleft',\n  'downright'\n]);\nexport type Direction = keyof typeof Direction;\n\n","import { stringToEnum } from './stringToEnum';\n\nexport const [MainChipType, MainChipTypeValues] = stringToEnum([\n  'nop',\n  'random',\n  'frame',\n  'altitude',\n  'wait',\n  'shield',\n  'temperature',\n  'missileAmmo',\n  'scanEnemy',\n  'scanAttack',\n  'ahead',\n  'back',\n  'ascent',\n  'descent',\n  'turn',\n  'fireLaser',\n  'fireMissile',\n  'fuel',\n  'log',\n  'scanDebug'\n]);\nexport type MainChipType = keyof typeof MainChipType;\n\nexport const [MissileChipType, MissileChipTypeValues] = stringToEnum([\n  'nop',\n  'random',\n  'frame',\n  'altitude',\n  'wait',\n  'direction',\n  'scanEnemy',\n  'speedUp',\n  'speedDown',\n  'turnRight',\n  'turnLeft',\n  'fuel'\n]);\nexport type MissileChipType = keyof typeof MissileChipType;\n\nexport type ChipType = MainChipType | MissileChipType;\n","import React, { PropsWithChildren } from 'react';\nimport { Chip, ChipType } from './BoardProvider';\nimport Arc from './Arc';\nimport { Direction, DirectionValues } from './Direction';\nimport { MainChipType } from './ChipType';\n\ninterface ConditionChip extends Chip {\n  branch: Direction;\n}\n\ninterface CheckChip extends ConditionChip {\n  greaterOrLess: 'greater' | 'less';\n  value: number;\n}\n\ninterface VariableActionChip extends Chip {\n  value: number;\n}\n\ninterface ScanChip extends ConditionChip {\n  direction: number;\n  angle: number;\n  range: number;\n}\n\ninterface FireLaserChip extends Chip {\n  direction: number;\n  force: number;\n}\n\ninterface LogChip extends Chip {\n  message: string;\n}\n\ninterface ScanDebugChip extends Chip {\n  direction: number;\n  angle: number;\n  range: number;\n}\n\nconst LimitableInput = ({\n  value,\n  min,\n  max,\n  step,\n  onChange\n}: {\n  value: number;\n  min?: number;\n  max?: number;\n  step?: number;\n  onChange: (value: number) => void;\n}) => {\n  const normalize = (value: number) => {\n    if (min !== undefined && value < min) {\n      return min;\n    }\n    if (max !== undefined && max < value) {\n      return max;\n    }\n    return value;\n  };\n  value = normalize(value);\n  return (\n    <input\n      type=\"number\"\n      value={value}\n      min={min}\n      max={max}\n      step={step}\n      onChange={e => {\n        onChange(normalize(Number(e.target.value)));\n      }}\n    />\n  );\n};\n\nconst SimpleActionChip = ({ label, description }: { label: string; description?: string }) => {\n  return (\n    <span style={{ textAlign: 'center' }}>\n      {label}\n      {description ? (\n        <>\n          <br />\n          {description}\n        </>\n      ) : null}\n    </span>\n  );\n};\n\n// variable action chip\nconst VariableActionChip = ({ chip, label }: { chip: VariableActionChip; label: string }) => {\n  return (\n    <span style={{ textAlign: 'center' }}>\n      {label}\n      <br />\n      {chip.value || 0}\n    </span>\n  );\n};\n\nconst VariableActionChipEditor = ({\n  chip,\n  min = 0,\n  max = 100,\n  step = 1,\n  onChipUpdate\n}: {\n  chip: VariableActionChip;\n  min?: number;\n  max?: number;\n  step?: number;\n  onChipUpdate: (chip: Chip) => void;\n}) => {\n  return (\n    <div>\n      値：\n      <input\n        type=\"number\"\n        value={chip.value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={e => {\n          onChipUpdate({ ...chip, value: e.target.value });\n        }}\n      />\n    </div>\n  );\n};\n\nconst UpdateBranchButtons = ({ chip, onChipUpdate }: { chip: ConditionChip; onChipUpdate: (chip: Chip) => void }) => {\n  const branchHandler = (branch: Direction) => () => onChipUpdate({ ...chip, branch });\n  return (\n    <>\n      {DirectionValues.map(v => (\n        <button key={v} onClick={branchHandler(v)}>\n          {v}\n        </button>\n      ))}\n    </>\n  );\n};\n\n// check chip\nconst CheckChip = ({ chip, label }: { chip: CheckChip; label: string }) => {\n  return (\n    <span style={{ textAlign: 'right' }}>\n      {chip.greaterOrLess === 'greater' ? (\n        <>\n          {label}≥\n          <br />\n          {chip.value || 0}\n        </>\n      ) : (\n        <>\n          {label}≤\n          <br />\n          {chip.value || 0}\n        </>\n      )}\n    </span>\n  );\n};\nconst CheckChipEditor = ({\n  chip,\n  min = 0,\n  max = 100,\n  step = 1,\n  onChipUpdate\n}: {\n  chip: CheckChip;\n  min?: number;\n  max?: number;\n  step?: number;\n  onChipUpdate: (chip: Chip) => void;\n}) => {\n  return (\n    <>\n      <p>\n        <UpdateBranchButtons chip={chip} onChipUpdate={onChipUpdate} />\n      </p>\n      <p>\n        以上or以下：\n        <input\n          type=\"radio\"\n          id=\"greater\"\n          name=\"greaterOrLess\"\n          value=\"greater\"\n          checked={chip.greaterOrLess === 'greater'}\n          onChange={e => {\n            onChipUpdate({ ...chip, greaterOrLess: e.target.value });\n          }}\n        />\n        <label htmlFor=\"greater\">greater</label>\n        <input\n          type=\"radio\"\n          id=\"less\"\n          name=\"greaterOrLess\"\n          value=\"less\"\n          checked={chip.greaterOrLess === 'less'}\n          onChange={e => {\n            onChipUpdate({ ...chip, greaterOrLess: e.target.value });\n          }}\n        />\n        <label htmlFor=\"less\">less</label>\n      </p>\n      <p>\n        値：\n        <LimitableInput\n          value={chip.value}\n          min={min}\n          max={max}\n          step={step}\n          onChange={value => onChipUpdate({ ...chip, value })}\n        />\n      </p>\n    </>\n  );\n};\n// check chip\nconst ScanChip = ({ chip: { direction = 0, angle = 90, range = 0 }, label }: { chip: ScanChip; label: string }) => {\n  const size = 32;\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap' }}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        {label}\n        <svg\n          style={{ marginLeft: '4px' }}\n          transform={`scale(1, -1)`}\n          width={size}\n          height={size}\n          viewBox={`${-size / 2 + 0.5} ${-size / 2 + 0.5} ${size} ${size}`}\n        >\n          <Arc direction={direction} angle={360} renge={size / 2} fillColor=\"#e8e8e8\" />\n          <Arc direction={direction} angle={angle} renge={size / 2} />\n        </svg>\n      </div>\n      <div style={{ width: '100%', textAlign: 'center' }}>{range}m</div>\n    </div>\n  );\n};\nconst ScanChipEditor = ({ chip, onChipUpdate }: { chip: ScanChip; onChipUpdate: (chip: Chip) => void }) => {\n  return (\n    <div>\n      <p>\n        <UpdateBranchButtons chip={chip} onChipUpdate={onChipUpdate} />\n      </p>\n      <p>\n        方向：\n        <LimitableInput\n          value={chip.direction}\n          min={0}\n          max={360}\n          step={5}\n          onChange={value => onChipUpdate({ ...chip, direction: value })}\n        />\n      </p>\n      <p>\n        範囲：\n        <LimitableInput\n          value={chip.angle}\n          min={0}\n          max={360}\n          step={5}\n          onChange={value => onChipUpdate({ ...chip, angle: value })}\n        />\n      </p>\n      <p>\n        距離：\n        <LimitableInput\n          value={chip.range}\n          min={0}\n          max={1000}\n          step={5}\n          onChange={value => onChipUpdate({ ...chip, range: value })}\n        />\n      </p>\n    </div>\n  );\n};\nconst FireLaserChip = ({ chip: { direction, force = 0 } }: { chip: FireLaserChip }) => {\n  const size = 32;\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap' }}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        🔫\n        <svg\n          style={{ marginLeft: '4px' }}\n          transform={`scale(1, -1)`}\n          width={size}\n          height={size}\n          viewBox={`${-size / 2 + 0.5} ${-size / 2 + 0.5} ${size} ${size}`}\n        >\n          <Arc direction={direction} angle={360} renge={size / 2} fillColor=\"#e8e8e8\" />\n          <Arc direction={direction} angle={1} renge={size / 2} />\n        </svg>\n      </div>\n      <div style={{ width: '100%', textAlign: 'center' }}>{force}</div>\n    </div>\n  );\n};\n\nconst FireLaserChipEditor = ({ chip, onChipUpdate }: { chip: FireLaserChip; onChipUpdate: (chip: Chip) => void }) => {\n  return (\n    <div>\n      <p>\n        方向：\n        <LimitableInput\n          value={chip.direction}\n          min={0}\n          max={360}\n          step={5}\n          onChange={value => onChipUpdate({ ...chip, direction: value })}\n        />\n      </p>\n      <p>\n        強さ：\n        <LimitableInput\n          value={chip.force}\n          min={3}\n          max={8}\n          step={1}\n          onChange={value => onChipUpdate({ ...chip, force: value })}\n        />\n      </p>\n    </div>\n  );\n};\n\nconst FireMissileChip = () => {\n  return <span style={{ textAlign: 'center' }}>🚀</span>;\n};\n\nconst LogChip = ({ chip }: { chip: LogChip }) => {\n  return (\n    <span style={{ textAlign: 'center' }}>\n      📝\n      {chip.message ? (\n        <>\n          <br />\n          {chip.message.length < 5 ? chip.message.substring(0, 5) : chip.message.substring(0, 4) + '...'}\n        </>\n      ) : null}\n    </span>\n  );\n};\n\nconst LogChipEditor = ({ chip, onChipUpdate }: { chip: LogChip; onChipUpdate: (chip: Chip) => void }) => {\n  return (\n    <p>\n      メッセージ：\n      <input\n        type=\"text\"\n        value={chip.direction}\n        onChange={e => {\n          onChipUpdate({ ...chip, message: e.target.value });\n        }}\n      />\n    </p>\n  );\n};\n\n// check chip\nconst ScanDebugChip = ({ chip: { direction = 0, angle = 90, range = 0 } }: { chip: ScanDebugChip }) => {\n  const size = 32;\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap' }}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        🐜\n        <svg\n          style={{ marginLeft: '4px' }}\n          transform={`scale(1, -1)`}\n          width={size}\n          height={size}\n          viewBox={`${-size / 2 + 0.5} ${-size / 2 + 0.5} ${size} ${size}`}\n        >\n          <Arc direction={direction} angle={360} renge={size / 2} fillColor=\"#e8e8e8\" />\n          <Arc direction={direction} angle={angle} renge={size / 2} />\n        </svg>\n      </div>\n      <div style={{ width: '100%', textAlign: 'center' }}>{range}m</div>\n    </div>\n  );\n};\nconst ScanDebugChipEditor = ({ chip, onChipUpdate }: { chip: ScanDebugChip; onChipUpdate: (chip: Chip) => void }) => {\n  return (\n    <div>\n      <p>\n        方向：\n        <LimitableInput\n          value={chip.direction}\n          min={0}\n          max={360}\n          step={5}\n          onChange={value => onChipUpdate({ ...chip, direction: value })}\n        />\n      </p>\n      <p>\n        範囲：\n        <LimitableInput\n          value={chip.angle}\n          min={0}\n          max={360}\n          step={5}\n          onChange={value => onChipUpdate({ ...chip, angle: value })}\n        />\n      </p>\n      <p>\n        距離：\n        <LimitableInput\n          value={chip.range}\n          min={0}\n          max={1000}\n          step={5}\n          onChange={value => onChipUpdate({ ...chip, range: value })}\n        />\n      </p>\n    </div>\n  );\n};\n\ntype ChipProps = PropsWithChildren<{ chip: Chip }>;\ntype ChipEditorProps = PropsWithChildren<{ chip: Chip; onChipUpdate: (chip: Chip) => void }>;\n\ninterface ChipUiFactory {\n  init: (prev?: Chip | null) => Chip;\n  Chip: React.FC<ChipProps>;\n  Editor: React.FC<ChipEditorProps>;\n}\n\nconst factories = new Map<ChipType, ChipUiFactory>();\n\nfactories.set(MainChipType.nop, {\n  init: (prev?: Chip | null) => ({ type: MainChipType.nop, next: prev ? prev.next : Direction.down }),\n  Chip: ({}: ChipProps) => <SimpleActionChip label=\"-\" />,\n  Editor: () => null\n});\nfactories.set(MainChipType.ahead, {\n  init: (prev?: Chip | null) => ({ type: MainChipType.ahead, next: prev ? prev.next : Direction.down }),\n  Chip: ({}: ChipProps) => <SimpleActionChip label=\"➡\" description=\"前進\" />,\n  Editor: () => null\n});\nfactories.set(MainChipType.back, {\n  init: (prev?: Chip | null) => ({ type: MainChipType.back, next: prev ? prev.next : Direction.down }),\n  Chip: ({}: ChipProps) => <SimpleActionChip label=\"⬅\" description=\"後退\" />,\n  Editor: () => null\n});\nfactories.set(MainChipType.ascent, {\n  init: (prev?: Chip | null) => ({ type: MainChipType.ascent, next: prev ? prev.next : Direction.down }),\n  Chip: ({}: ChipProps) => <SimpleActionChip label=\"⤴\" description=\"上昇\" />,\n  Editor: () => null\n});\nfactories.set(MainChipType.descent, {\n  init: (prev?: Chip | null) => ({ type: MainChipType.descent, next: prev ? prev.next : Direction.down }),\n  Chip: ({}: ChipProps) => <SimpleActionChip label=\"⤵\" description=\"下降\" />,\n  Editor: () => null\n});\nfactories.set(MainChipType.turn, {\n  init: (prev?: Chip | null) => ({ type: MainChipType.turn, next: prev ? prev.next : Direction.down }),\n  Chip: ({}: ChipProps) => <SimpleActionChip label=\"↩\" description=\"ターン\" />,\n  Editor: () => null\n});\n\nfactories.set(MainChipType.wait, {\n  init: (prev?: Chip | null) =>\n    ({ type: MainChipType.wait, next: prev ? prev.next : Direction.down, value: 0 } as VariableActionChip),\n  Chip: ({ chip }: ChipProps) => <VariableActionChip chip={chip as VariableActionChip} label=\"⌛\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <VariableActionChipEditor\n      chip={chip as VariableActionChip}\n      onChipUpdate={onChipUpdate}\n      min={0}\n      max={1000}\n      step={1}\n    />\n  )\n});\n\nfactories.set(MainChipType.frame, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.frame,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      greaterOrLess: 'greater',\n      value: 50\n    } as CheckChip),\n  Chip: ({ chip }: ChipProps) => <CheckChip chip={chip as CheckChip} label=\"⏱\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <CheckChipEditor chip={chip as CheckChip} onChipUpdate={onChipUpdate} min={0} max={10000} step={1} />\n  )\n});\nfactories.set(MainChipType.fuel, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.fuel,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      greaterOrLess: 'greater',\n      value: 50\n    } as CheckChip),\n  Chip: ({ chip }: ChipProps) => <CheckChip chip={chip as CheckChip} label=\"⛽\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <CheckChipEditor chip={chip as CheckChip} onChipUpdate={onChipUpdate} min={0} max={100} step={5} />\n  )\n});\nfactories.set(MainChipType.altitude, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.altitude,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      greaterOrLess: 'greater',\n      value: 100\n    } as CheckChip),\n  Chip: ({ chip }: ChipProps) => <CheckChip chip={chip as CheckChip} label=\"↕\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <CheckChipEditor chip={chip as CheckChip} onChipUpdate={onChipUpdate} min={0} max={1000} step={5} />\n  )\n});\nfactories.set(MainChipType.shield, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.shield,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      greaterOrLess: 'greater',\n      value: 50\n    } as CheckChip),\n  Chip: ({ chip }: ChipProps) => <CheckChip chip={chip as CheckChip} label=\"🛡\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <CheckChipEditor chip={chip as CheckChip} onChipUpdate={onChipUpdate} min={0} max={100} step={5} />\n  )\n});\nfactories.set(MainChipType.temperature, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.temperature,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      greaterOrLess: 'greater',\n      value: 50\n    } as CheckChip),\n  Chip: ({ chip }: ChipProps) => <CheckChip chip={chip as CheckChip} label=\"🌡\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <CheckChipEditor chip={chip as CheckChip} onChipUpdate={onChipUpdate} min={0} max={100} step={5} />\n  )\n});\nfactories.set(MainChipType.missileAmmo, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.missileAmmo,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      greaterOrLess: 'greater',\n      value: 5\n    } as CheckChip),\n  Chip: ({ chip }: ChipProps) => <CheckChip chip={chip as CheckChip} label=\"🚀\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <CheckChipEditor chip={chip as CheckChip} onChipUpdate={onChipUpdate} min={0} max={20} step={5} />\n  )\n});\n\nfactories.set(MainChipType.random, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.random,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      greaterOrLess: 'greater',\n      value: 1\n    } as CheckChip),\n  Chip: ({ chip }: ChipProps) => <CheckChip chip={chip as CheckChip} label=\"🎲\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <CheckChipEditor chip={chip as CheckChip} onChipUpdate={onChipUpdate} min={0} max={6} step={1} />\n  )\n});\nfactories.set(MainChipType.scanEnemy, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.scanEnemy,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      direction: 0,\n      angle: 90,\n      range: 100\n    } as ScanChip),\n  Chip: ({ chip }: ChipProps) => <ScanChip chip={chip as ScanChip} label=\"E\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <ScanChipEditor chip={chip as ScanChip} onChipUpdate={onChipUpdate} />\n  )\n});\nfactories.set(MainChipType.scanAttack, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.scanAttack,\n      next: prev ? prev.next : Direction.down,\n      branch: prev ? prev.branch || Direction.right : Direction.right,\n      direction: 0,\n      angle: 90,\n      range: 100\n    } as ScanChip),\n  Chip: ({ chip }: ChipProps) => <ScanChip chip={chip as ScanChip} label=\"A\" />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <ScanChipEditor chip={chip as ScanChip} onChipUpdate={onChipUpdate} />\n  )\n});\n\nfactories.set(MainChipType.fireLaser, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.fireLaser,\n      next: prev ? prev.next : Direction.down,\n      direction: 0,\n      force: 100\n    } as FireLaserChip),\n  Chip: ({ chip }: ChipProps) => <FireLaserChip chip={chip as FireLaserChip} />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <FireLaserChipEditor chip={chip as FireLaserChip} onChipUpdate={onChipUpdate} />\n  )\n});\n\nfactories.set(MainChipType.fireMissile, {\n  init: (prev?: Chip | null) => ({ type: MainChipType.fireMissile, next: prev ? prev.next : Direction.down }),\n  Chip: ({}: ChipProps) => <FireMissileChip />,\n  Editor: () => null\n});\n\nfactories.set(MainChipType.log, {\n  init: (prev?: Chip | null) => ({ type: MainChipType.log, next: prev ? prev.next : Direction.down }),\n  Chip: ({ chip }: ChipProps) => <LogChip chip={chip as LogChip} />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <LogChipEditor chip={chip as LogChip} onChipUpdate={onChipUpdate} />\n  )\n});\n\nfactories.set(MainChipType.scanDebug, {\n  init: (prev?: Chip | null) =>\n    ({\n      type: MainChipType.scanDebug,\n      next: prev ? prev.next : Direction.down,\n      direction: 0,\n      angle: 90,\n      range: 100\n    } as ScanDebugChip),\n  Chip: ({ chip }: ChipProps) => <ScanDebugChip chip={chip as ScanDebugChip} />,\n  Editor: ({ chip, onChipUpdate }: ChipEditorProps) => (\n    <ScanDebugChipEditor chip={chip as ScanDebugChip} onChipUpdate={onChipUpdate} />\n  )\n});\n\nexport function selectChipUi(chip: ChipType): ChipUiFactory {\n  const factory = factories.get(chip);\n  if (!factory) {\n    throw new Error('Unknown chip');\n  }\n  return factory;\n}\n","import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { useBoardContext } from './BoardProvider';\nimport { Xy } from './Xy';\nimport { selectChipUi } from './Chips';\nimport { ProgramType } from './ProgramType';\nimport { Direction } from './Direction';\n\nconst m = new Map<Direction, { [key: string]: string }>();\nm.set('up', { position: 'absolute', top: '0', left: '35%' });\nm.set('upright', { position: 'absolute', top: '0', right: '0', transform: 'rotate(45deg)' });\nm.set('right', { position: 'absolute', top: '55%', right: '0', transform: 'rotate(90deg)' });\nm.set('downright', { position: 'absolute', bottom: '0', right: '0', transform: 'rotate(135deg)' });\nm.set('down', { position: 'absolute', bottom: '0', left: '55%', transform: 'rotate(180deg)' });\nm.set('downleft', { position: 'absolute', bottom: '0', left: '0', transform: 'rotate(225deg)' });\nm.set('left', { position: 'absolute', top: '35%', left: '0', transform: 'rotate(270deg)' });\nm.set('upleft', { position: 'absolute', top: '0', left: '0', transform: 'rotate(315deg)' });\n\nfunction Arrow({ next, color = '' }: { next: Direction; color?: string }) {\n  const style = m.get(next);\n  return style ? <div style={{ ...style, color, fontWeight: color ? 'bold' : undefined }}>↑</div> : null;\n}\n\nexport function Chip({ position }: { position: Xy }) {\n  const {\n    state: { main, missile, targetPosition, editingChip, targetProgram },\n    actions: { startEditing, drag: actionDrag }\n  } = useBoardContext();\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'CHIP_SOCKET' },\n    begin: () => {\n      actionDrag(position);\n    },\n    collect: monitor => ({ isDragging: !!monitor.isDragging() })\n  });\n\n  const isTarget =\n    editingChip && targetPosition !== null && targetPosition.x === position.x && targetPosition.y === position.y;\n  const program = targetProgram === ProgramType.MAIN ? main : missile;\n  const chip = isTarget ? editingChip : program[position.y][position.x];\n\n  if (!chip) {\n    return null;\n  }\n\n  const chipUi = selectChipUi(chip.type);\n\n  return (\n    <div\n      ref={drag}\n      onClick={() => startEditing(position)}\n      style={{\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        opacity: isDragging ? 0.5 : 1,\n        position: 'relative'\n      }}\n    >\n      <div\n        style={{\n          height: '80%',\n          width: '80%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#fff'\n        }}\n      >\n        <chipUi.Chip chip={chip} />\n      </div>\n      {chip['branch'] ? <Arrow next={chip['branch']} color=\"#f00\" /> : null}\n      <Arrow next={chip.next} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useBoardContext } from './BoardProvider';\nimport { Xy } from './Xy';\nimport { Chip } from './Chip';\nimport { ProgramType } from './ProgramType';\n\nexport function ChipSocket({ position, size }: { position: Xy; size: number }) {\n  const {\n    state: { main, missile, targetPosition, editingChip, targetProgram },\n    actions: { drop: actionDrop, startEditing }\n  } = useBoardContext();\n\n  const isTarget =\n    editingChip && targetPosition !== null && targetPosition.x === position.x && targetPosition.y === position.y;\n\n  const border = isTarget ? 'solid 2px #f88' : '';\n\n  const [{ isOver }, drop] = useDrop({\n    accept: 'CHIP_SOCKET',\n    drop: () => actionDrop(position),\n    collect: monitor => ({ isOver: !!monitor.isOver() })\n  });\n  const program = targetProgram === ProgramType.MAIN ? main : missile;\n  const chip = isTarget ? editingChip : program[position.y][position.x];\n\n  return (\n    <div\n      ref={drop}\n      style={{\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#eee',\n        height: `${size}px`,\n        width: `${size}px`,\n        opacity: isOver ? 0.5 : 1\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: `${size}px`,\n          width: `${size}px`\n        }}\n      >\n        {chip !== null ? (\n          <Chip position={position} />\n        ) : (\n          <button\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: '#e8e8e8',\n              width: `${size - 16}px`,\n              height: `${size - 16}px`,\n              border: 'solid 1px #ddd'\n            }}\n            onClick={() => startEditing(position)}\n          >\n            +\n          </button>\n        )}\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          width: `${size - 4}px`,\n          height: `${size - 4}px`,\n          pointerEvents: 'none',\n          border\n        }}\n      ></div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useBoardContext } from './BoardProvider';\nimport { ChipSocket } from './ChipSocket';\nimport { ProgramType } from './ProgramType';\n\nconst EDITOR_SIZE = 400;\n\nexport function Board() {\n  const {\n    state: { length, targetProgram, main, missile },\n    actions: { overrideProgram }\n  } = useBoardContext();\n\n  const size = EDITOR_SIZE / length;\n  const chips = [];\n  for (let y = 0; y < length; y++) {\n    for (let x = 0; x < length; x++) {\n      chips.push(<ChipSocket key={`${x}_${y}`} position={{ x, y }} size={size} />);\n    }\n  }\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', width: `100%` }}>\n      <div style={{ display: 'flex', flexWrap: 'wrap', width: `${EDITOR_SIZE}px` }}>{chips}</div>\n      <div>\n        <textarea\n          style={{ border: 'solid 1px #eee', height: '360px', width: '300px', color: '#aaa' }}\n          value={JSON.stringify(targetProgram === ProgramType.MAIN ? main : missile, null, ' ')}\n          onChange={e => overrideProgram(JSON.parse(e.target.value))}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useBoardContext } from './BoardProvider';\nimport { ProgramType } from './ProgramType';\n\nexport function ProgramSelector() {\n  const {\n    state: { targetProgram },\n    actions: { setTargetProgram }\n  } = useBoardContext();\n\n  return (\n    <div>\n      {targetProgram}\n      <span style={{ marginLeft: '8px' }}>\n        <button onClick={() => setTargetProgram(ProgramType.MAIN)}>メイン</button>\n        <button onClick={() => setTargetProgram(ProgramType.MISSILE)}>ミサイル</button>\n      </span>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useBoardContext } from './BoardProvider';\nimport { selectChipUi } from './Chips';\nimport { MainChipType, MainChipTypeValues } from './ChipType';\nimport { Direction, DirectionValues } from './Direction';\n\nexport function ChipEditor() {\n  const context = useBoardContext();\n\n  const state = context.state;\n  const { editingChip } = state;\n  if (!editingChip) {\n    return null;\n  }\n  const { updateEditingChip, finishEditing, cancel, delete: del } = context.actions;\n\n  const typeHandler = (type: MainChipType) => () => {\n    const factory = selectChipUi(type);\n    const f = factory.init(editingChip);\n    console.log(f);\n    return updateEditingChip({ ...f });\n  };\n  const nextHandler = (next: Direction) => () => editingChip && updateEditingChip({ ...editingChip, next });\n\n  const chipUi = editingChip ? selectChipUi(editingChip.type) : null;\n\n  return (\n    <div>\n      <p>\n        {MainChipTypeValues.map(v => (\n          <button key={v} onClick={typeHandler(v)}>\n            {v}\n          </button>\n        ))}\n      </p>\n      <p>\n        {DirectionValues.map(v => (\n          <button key={v} onClick={nextHandler(v)}>\n            {v}\n          </button>\n        ))}\n      </p>\n      {chipUi && editingChip ? <chipUi.Editor chip={editingChip} onChipUpdate={updateEditingChip} /> : null}\n      <button onClick={() => finishEditing()}>finish</button>\n      <button onClick={() => cancel()}>cancel</button>\n      <button onClick={() => del()}>delete</button>\n    </div>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport { createTinyContext } from 'tiny-context';\n\ninterface LogState {\n  log: string[];\n}\ninterface LogAction {\n  log: (...messages: string[]) => Promise<void>;\n}\n\nconst { Provider, useContext } = createTinyContext<LogState, LogAction>({\n  log: (state: LogState, ...messages: string[]) => {\n    return { ...state, log: messages.reverse().concat(state.log) };\n  }\n});\n\nexport const useLogContext = useContext;\nexport const LogProvider = ({ children }: { children: ReactNode }) => {\n  return <Provider value={{ log: [] }}>{children}</Provider>;\n};\n","import React, { useMemo } from 'react';\nimport { useBoardContext } from './BoardProvider';\nimport { useLogContext } from './LogProvider';\n\nexport function Log({}) {\n  const context = useBoardContext();\n  const state = context.state;\n  const {\n    state: { log },\n    actions: { log: l }\n  } = useLogContext();\n  useMemo(() => {\n    const debug = { ...state };\n    const main = debug.main;\n    delete debug.main;\n    delete debug.missile;\n    l('----', JSON.stringify(debug, null, '  '), JSON.stringify(main), '----');\n  }, [state]);\n\n  return <pre>{log.join('\\n')}</pre>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BoardEditor } from './BoardEditor';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<BoardEditor />, rootElement);\n","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport Backend from 'react-dnd-html5-backend';\nimport { BoardProvider } from './parts/BoardProvider';\nimport { Board } from './parts/Board';\nimport { ProgramSelector } from './parts/ProgramSelector';\nimport { ChipEditor } from './parts/ChipEditor';\nimport { LogProvider } from './parts/LogProvider';\nimport { Log } from './parts/Log';\n\nexport function BoardEditor() {\n  return (\n    <LogProvider>\n      <BoardProvider length={4}>\n        <ProgramSelector />\n        <DndProvider backend={Backend}>\n          <Board />\n        </DndProvider>\n        <ChipEditor />\n        <Log />\n      </BoardProvider>\n    </LogProvider>\n  );\n}\n"],"sourceRoot":""}